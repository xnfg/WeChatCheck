<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.wechat.wechatserver.api.base.mapper.StudentJobDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.school.wechat.wechatserver.api.base.model.StudentJobDetails" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_number" property="jobNumber" jdbcType="INTEGER" />
    <result column="student_number" property="studentNumber" jdbcType="VARCHAR" />
    <result column="start_work_time" property="startWorkTime" jdbcType="TIMESTAMP" />
    <result column="job_status" property="jobStatus" jdbcType="INTEGER" />
    <result column="show" property="show" jdbcType="INTEGER" />
    <result column="enroll_status" property="enrollStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_number, student_number, start_work_time, job_status, show,enroll_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_job_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_job_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.school.wechat.wechatserver.api.base.model.StudentJobDetails" >
    insert into student_job_details (id, job_number, student_number, 
      start_work_time, job_status, show
      )
    values (#{id,jdbcType=INTEGER}, #{jobNumber,jdbcType=INTEGER}, #{studentNumber,jdbcType=VARCHAR},
      #{startWorkTime,jdbcType=TIMESTAMP}, #{jobStatus,jdbcType=INTEGER}, #{show,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.school.wechat.wechatserver.api.base.model.StudentJobDetails" >
    insert into student_job_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobNumber != null" >
        job_number,
      </if>
      <if test="studentNumber != null" >
        student_number,
      </if>
      <if test="startWorkTime != null" >
        start_work_time,
      </if>
      <if test="jobStatus != null" >
        job_status,
      </if>
      <if test="show != null" >
        show,
      </if>
      <if test="enrollStatus!=null">
        enroll_status
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobNumber != null" >
        #{jobNumber,jdbcType=INTEGER},
      </if>
      <if test="studentNumber != null" >
        #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="startWorkTime != null" >
        #{startWorkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobStatus != null" >
        #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="show != null" >
        #{show,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.wechat.wechatserver.api.base.model.StudentJobDetails" >
    update student_job_details
    <set >
      <if test="jobNumber != null" >
        job_number = #{jobNumber,jdbcType=INTEGER},
      </if>
      <if test="studentNumber != null" >
        student_number = #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="startWorkTime != null" >
        start_work_time = #{startWorkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="show != null" >
        show = #{show,jdbcType=INTEGER},
      </if>
      <if test="enrollStatus!=null">
        enroll_status ={enrollStatus,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.wechat.wechatserver.api.base.model.StudentJobDetails" >
    update student_job_details
    set job_number = #{jobNumber,jdbcType=INTEGER},
      student_number = #{studentNumber,jdbcType=VARCHAR},
      start_work_time = #{startWorkTime,jdbcType=TIMESTAMP},
      job_status = #{jobStatus,jdbcType=INTEGER},
      show = #{show,jdbcType=INTEGER},
      enroll_status = #{enrollStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="outStudentJobDetails">
    update student_job_details set `show`=1 where job_number=#{id} and student_number=#{openID}
  </update>
  <select id="findAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from student_job_details
  </select>

</mapper>