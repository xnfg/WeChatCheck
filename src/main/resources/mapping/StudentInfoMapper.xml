<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.wechat.wechatserver.api.base.mapper.StudentInfoMapper" >
  <resultMap id="BaseResultMap" type="com.school.wechat.wechatserver.api.base.model.StudentInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_number" property="studentNumber" jdbcType="VARCHAR" />
    <result column="vip_rank" property="vipRank" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="head_portrait" property="headPortrait" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="reputation_integral" property="reputationIntegral" jdbcType="INTEGER" />
    <result column="open_member" property="openMember" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, student_number, vip_rank, create_time, head_portrait, nickname, student_name, 
    sex, age, height, phone_number, school, reputation_integral, open_member
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByLogin" resultType="com.school.wechat.wechatserver.api.base.model.vo.LoginModel">
    SELECT
	info.head_portrait AS head_portrait,
	info.nickname AS nickname,
	info.student_name AS student_name,
	info.sex AS sex,
	info.age AS age,
	info.height AS height,
	info.phone_number AS phone_number,
	info.school AS school,
	IFNULL(
		sum( CASE WHEN `order`.order_type = 1 THEN `order`.order_money ELSE NULL END ) - sum( CASE WHEN `order`.order_type = 2 THEN `order`.order_money ELSE NULL END ),
		0
	) AS money,
	DATEDIFF( SYSDATE( ), info.create_time ) + 1 AS joinTime,
	info.open_member AS isVip
FROM
	student_info info
	LEFT JOIN oder_details `order` ON `order`.student_number = info.student_number
	AND `order`.order_status = 1
WHERE
	info.student_number = #{openID}
	GROUP BY
	joinTime,
	info.head_portrait,
	info.nickname ,
	info.student_name ,
	info.sex,
	info.age ,
	info.height ,
	info.phone_number ,
	info.school ,
	info.open_member
  </select>
    <select id="findByOpenID" resultType="com.school.wechat.wechatserver.api.base.model.StudentInfo">
      select
      <include refid="Base_Column_List" />
      from student_info
      where
        student_number=#{openID}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.school.wechat.wechatserver.api.base.model.StudentInfo" >
    insert into student_info (id, student_number, vip_rank, 
      create_time, head_portrait, nickname, 
      student_name, sex, age, 
      height, phone_number, school, 
      reputation_integral, open_member)
    values (#{id,jdbcType=INTEGER}, #{studentNumber,jdbcType=VARCHAR}, #{vipRank,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{headPortrait,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{studentName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, 
      #{height,jdbcType=INTEGER}, #{phoneNumber,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{reputationIntegral,jdbcType=INTEGER}, #{openMember,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.school.wechat.wechatserver.api.base.model.StudentInfo" >
    insert into student_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentNumber != null" >
        student_number,
      </if>
      <if test="vipRank != null" >
        vip_rank,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="headPortrait != null" >
        head_portrait,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="reputationIntegral != null" >
        reputation_integral,
      </if>
      <if test="openMember != null" >
        open_member,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentNumber != null" >
        #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="vipRank != null" >
        #{vipRank,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headPortrait != null" >
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null" >
        #{height,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="reputationIntegral != null" >
        #{reputationIntegral,jdbcType=INTEGER},
      </if>
      <if test="openMember != null" >
        #{openMember,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.wechat.wechatserver.api.base.model.StudentInfo" >
    update student_info
    <set >
      <if test="studentNumber != null" >
        student_number = #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="vipRank != null" >
        vip_rank = #{vipRank,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headPortrait != null" >
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="reputationIntegral != null" >
        reputation_integral = #{reputationIntegral,jdbcType=INTEGER},
      </if>
      <if test="openMember != null" >
        open_member = #{openMember,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.wechat.wechatserver.api.base.model.StudentInfo" >
    update student_info
    set student_number = #{studentNumber,jdbcType=VARCHAR},
      vip_rank = #{vipRank,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      reputation_integral = #{reputationIntegral,jdbcType=INTEGER},
      open_member = #{openMember,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>